<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Bag_FooterTermsAndConditions" xml:space="preserve">
    <value>By purchasing, you agree with </value>
  </data>
  <data name="Bag_FooterTermsAndConditionsUnderlined" xml:space="preserve">
    <value>rules</value>
  </data>
  <data name="Bag_PayByCard" xml:space="preserve">
    <value>Pay By Card</value>
  </data>
  <data name="Bag_PayPal" xml:space="preserve">
    <value>PayPal</value>
  </data>
  <data name="Bag_TotalPrice" xml:space="preserve">
    <value>Total price</value>
  </data>
  <data name="Bag_Wallet" xml:space="preserve">
    <value>Wallet</value>
  </data>
  <data name="Email_Header" xml:space="preserve">
    <value>Add your E-mail
to order</value>
  </data>
  <data name="Email_Hint" xml:space="preserve">
    <value>E-mail</value>
  </data>
  <data name="Email_License" xml:space="preserve">
    <value>By purchasing, you agree with the rules</value>
  </data>
  <data name="FailedToAddAccount" xml:space="preserve">
    <value>Failed to add account</value>
  </data>
  <data name="HashtagHeader" xml:space="preserve">
    <value>Hashtag</value>
  </data>
  <data name="HashtagPlaceholder" xml:space="preserve">
    <value>hashtag</value>
  </data>
  <data name="Hashtag_SimilarHashtagsNotFound" xml:space="preserve">
    <value>Similar hashtags not found</value>
  </data>
  <data name="Instagram" xml:space="preserve">
    <value>Instagram</value>
  </data>
  <data name="InstagramHeader" xml:space="preserve">
    <value>Instagram</value>
  </data>
  <data name="InstagramPlaceholder" xml:space="preserve">
    <value>login</value>
  </data>
  <data name="Instagram_AccountAlreadySaved" xml:space="preserve">
    <value>This account already saved</value>
  </data>
  <data name="Instagram_AccountLimitReached" xml:space="preserve">
    <value>Limit of {0} saved accounts reached. Please remove on of the existing ones.</value>
  </data>
  <data name="Instagram_AddComment" xml:space="preserve">
    <value>Add comment</value>
  </data>
  <data name="Instagram_Auto" xml:space="preserve">
    <value>Auto Likes</value>
  </data>
  <data name="Instagram_ClosedOrDoesNotExistError" xml:space="preserve">
    <value>Oops, there is no such profile yet or it is closed. Please check login and availablity of your account</value>
  </data>
  <data name="Instagram_Comments" xml:space="preserve">
    <value>Comments</value>
  </data>
  <data name="Instagram_Custom" xml:space="preserve">
    <value>Custom</value>
  </data>
  <data name="Instagram_Followers" xml:space="preserve">
    <value>Followers</value>
  </data>
  <data name="Instagram_ForNewPosts" xml:space="preserve">
    <value>For new posts</value>
  </data>
  <data name="Instagram_GetTenFree" xml:space="preserve">
    <value>Get 10 Free</value>
  </data>
  <data name="Instagram_Gradual" xml:space="preserve">
    <value>Gradual</value>
  </data>
  <data name="Instagram_Instant" xml:space="preserve">
    <value>Instant</value>
  </data>
  <data name="Instagram_InstantDelivery" xml:space="preserve">
    <value>Instant Delivery</value>
  </data>
  <data name="Instagram_InstantStart" xml:space="preserve">
    <value>Instant Start</value>
  </data>
  <data name="Instagram_Like" xml:space="preserve">
    <value>Likes</value>
  </data>
  <data name="Instagram_NoPostsError" xml:space="preserve">
    <value>This profile has no posts yet</value>
  </data>
  <data name="Instagram_Normal" xml:space="preserve">
    <value>Normal</value>
  </data>
  <data name="Instagram_NormalLooking" xml:space="preserve">
    <value>Normal looking</value>
  </data>
  <data name="Instagram_Permanent" xml:space="preserve">
    <value>Perma-
    Snent</value>
  </data>
  <data name="Instagram_Perpost" xml:space="preserve">
    <value>Per post</value>
  </data>
  <data name="Instagram_Premium" xml:space="preserve">
    <value>Premium</value>
  </data>
  <data name="Instagram_Random" xml:space="preserve">
    <value>Random</value>
  </data>
  <data name="Instagram_RealLooking" xml:space="preserve">
    <value>Real Looking</value>
  </data>
  <data name="Instagram_ShowMorePhotos" xml:space="preserve">
    <value>Show more</value>
  </data>
  <data name="Instagram_Subscription" xml:space="preserve">
    <value>Subscription</value>
  </data>
  <data name="Instagram_Views" xml:space="preserve">
    <value>Views</value>
  </data>
  <data name="InternetConnected" xml:space="preserve">
    <value>Internet connected</value>
  </data>
  <data name="InternetDisconnected" xml:space="preserve">
    <value>Internet disconnected</value>
  </data>
  <data name="MenuContactUs" xml:space="preserve">
    <value>Contact Us</value>
  </data>
  <data name="MenuFaq" xml:space="preserve">
    <value>FAQ</value>
  </data>
  <data name="MenuPrivacyPolicy" xml:space="preserve">
    <value>Privacy Policy</value>
  </data>
  <data name="MenuTermsOfService" xml:space="preserve">
    <value>Terms of Service</value>
  </data>
  <data name="MenuVisitSite" xml:space="preserve">
    <value>Visit site</value>
  </data>
  <data name="Poprey" xml:space="preserve">
    <value>Poprey</value>
  </data>
</root>